#string priklad "(1+455)*3-1"
;                   *+,-./
#string precedence "320203"
mov bl, 0
; bl = typ tokenu
; 0 - nic
; 1 - cislo
; 2 - operator    -  42:  *+,-./
; 3 - paranteses  -  40=left 41=right

; dx = hodnota tokenu


mov adr, priklad
loop:               ;zacatek cteni inputu
mov al, [adr]       ;prvni znak vlozen do al registeru
add adr, 1         ;posunuti na dalsi znak

mov ah, 48          ; Pokud je znak <48 nebo >57, neni cislo
cmp al, ah          ;
jl not_digit        ;
                    ;
mov ah, 57          ;
cmp al, ah          ;
jg not_digit        ;

sub al, 48          ; definitely a digit
mov dx, al          ;
mov bl, 1           ;         


loop_digit:

mov al, [adr]
          
cmp al, 48          ; pokud je znak mensi nez 48, konci cislo
jl end_token        ; ergo konec tokenu
          
cmp al, 57          ; pokud je znak vetsi nez 57, konci cislo
jg end_token        ; ergo konec tokenu

isub al, 48         ; subtract ASCII bias
iadd adr, 1         ; posunuti o znak dale

mul dx, 10          ; vynasobeni predchoziho cisla desiti
add dx, al          ; pricteni nove cifry k predchozimu cislu
jmp loop_digit


not_digit:


cmp al, '+'
je yes_operator
cmp al, '-'
je yes_operator
cmp al, '*'
je yes_operator
cmp al, '/'
je yes_operator

jmp not_operator

yes_operator:
mov bl, 2
mov dx, al

not_operator:
                
cmp al, '('
je yes_parantheses
cmp al, ')'
je yes_parantheses

jmp not_parantheses

yes_parantheses:
mov bl, 3
mov dx, al
jmp end_token
not_parantheses:

mov ah, '!'
exclamation_mark:
int 1
jmp exclamation_mark

end_token:







;; S NADHLEDEM!
operator_mul_div:   ; priorita 3
sub sp, 1
mov ah, [sp]        ; popne posledni OP ze stacku ke kontrole priorit
add sp, 1    
cmp ah, '*'         ; kontrola
je mul_push         ; pokud je znak stejne priority, provede se mul_push

cmp ah, '/'         ; kontrola
je mul_push         ; pokud je znak stejne priority, provede se mul_push

push ah             ; pokud neni stejne nebo vyssi priority, kontrolovany OP se vrati 
push al             ; a pushne se k nemu novy OP
jmp end_token       ; konec tokenu






